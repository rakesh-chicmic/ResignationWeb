@page "/resign-history"
@inherits ResignationHistoryBase


<h3>Resignation History</h3>
<div class="container">
    @if (resignation.Count > 0)
    {
    <div class="row">
        <div class="col">
            <table class="table">
              <thead>
                <tr>
                 <td>APPLIED ON</td>
                  <td>RESIGN DATE</td>
                  <td>RELIEVING DATE</td>
                  <td>STATUS</td>
                  <td>ACTION BY</td>
                  <td>ACTION</td>
                </tr>
              </thead>
              <tbody>
                           @foreach(var res in resignation){
                                <tr>
                                    <td class="fw-bold">@res.createdAt.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@res.resignationDate.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@res.relievingDate.Date.ToString("dd/MM/yyyy")</td>
                                    <td><Status Value="@res.status"></Status></td>
                                @if (@res.approvedBy == null)
                                    {
                                    <td>N/A</td>
                                    User userResponse = SerializeResponse(@res.userDetails);
                                    <ShowDetailsPopup Resignation="@res" UserDetails="userResponse" Title="Resignation Details"></ShowDetailsPopup>
                                }
                                else
                                {
                                    User approverResponse = SerializeResponse(@res.approverDetails);
                                    User userResponse = SerializeResponse(@res.userDetails);

                                    <td>@approverResponse.name</td>
                                    <ShowDetailsPopup Resignation="@res" Approver="@approverResponse" UserDetails="userResponse" Title="Resignation Details"></ShowDetailsPopup>
                                 }
                                    <td>
                                    <h6 style="color:gray" class="ms-3"><i class="bi bi-eye-fill" @onclick="ShowDetails"></i></h6>  
                                    </td>
                                </tr>
                           }  
              </tbody>
            </table>
        </div>
     </div>
    @*pagination*@
    <div class="row">
        <div class="col justify-content-end me-3 mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-end">
                    <li class="page-item">
                            <button disabled="@IsFirstPage" @onclick="GoToPreviousPage" class="pagination-buttons">
                            <span aria-hidden="true" class="page-link">&laquo;</span>
                        </button>

                    </li>

                        <li class="page-item"><span class="page-link currentPage">@pagination.CurrentPage</span></li>
                    <li class="page-item">
                            <button disabled="@IsLastPage" @onclick="GoToNextPage" class="pagination-buttons">
                            <span aria-hidden="true" class="page-link">&raquo;</span>
                        </button>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
        }
        else
        {
        <NoRecordFound></NoRecordFound>
        }
</div>

@code {
    private bool IsFirstPage => pagination.CurrentPage == 1;
    private bool IsLastPage => pagination.CurrentPage == pagination.TotalPages;

    private async Task GoToNextPage()
    {
        if (!IsLastPage)
        {
            pagination.CurrentPage++;

            await LoadData();
        }
    }

    private async Task GoToPreviousPage()
    {
        if (!IsFirstPage)
        {
            pagination.CurrentPage--;
            await LoadData();
        }
    }
    private User SerializeResponse(object res)
    {
        string Response = JsonSerializer.Serialize(res);
        List<User> Details = JsonSerializer.Deserialize<List<User>>(Response)!;
        return Details[0];
    }
}





