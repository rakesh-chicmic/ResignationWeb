@page "/resign-history"
@inherits ResignationHistoryBase

<ShowDetailsPopup Resignation="@resignDetails" Approver="@approverResponse" UserDetails="@userResponse" Title="Resignation Details"></ShowDetailsPopup>
<h3>Resignation History</h3>
<div class="container shadow">
    @if (resignation.Count > 0)
    {
        <div class="row">
            <div class="col">
                <table class="table">
                    <thead>
                        <tr>
                            <td>APPLIED ON</td>
                            <td>RESIGN DATE</td>
                            <td>RELIEVING DATE</td>
                            <td>STATUS</td>
                            <td>ACTION BY</td>
                            <td>ACTION</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var res in resignation)
                        {
                            <tr class="active-row">
                                <td class="fw-bold">@res.createdAt.Date.ToString("dd/MM/yyyy")</td>
                                <td>@res.resignationDate.Date.ToString("dd/MM/yyyy")</td>
                                <td>@res.relievingDate.Date.ToString("dd/MM/yyyy")</td>
                                <td><Status Value="@res.status"></Status></td>
                                @if (@res.approvedBy == null)
                                {
                                    <td>N/A</td>
                                }
                                else
                                {
                                    User actionUser = SerializeResponse(res.approverDetails);
                                    <td>@actionUser.name</td>
                                }
                                <td>
                                    <h6 class="ms-3 view"><i class="fa fa-eye" aria-hidden="true" @onclick="()=>ShowDetails(res)"></i></h6>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        @*pagination*@
        <div class="row">
            <div class="col justify-content-end me-3 mt-3">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-end">
                        <li class="page-item">
                            <button disabled="@IsFirstPage" @onclick="GoToPreviousPage" class="pagination-buttons">
                                <span aria-hidden="true" class="page-link">&laquo;</span>
                            </button>
                        </li>

                        <li class="page-item"><span class="page-link currentPage">@pagination.CurrentPage</span></li>
                        <li class="page-item">
                            <button disabled="@IsLastPage" @onclick="GoToNextPage" class="pagination-buttons">
                                <span aria-hidden="true" class="page-link">&raquo;</span>
                            </button>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
    else
    {
        <NoRecordFound></NoRecordFound>
    }
</div>

@code {
    private bool IsFirstPage => pagination.CurrentPage == 1;
    private bool IsLastPage => pagination.CurrentPage == pagination.TotalPages;
    private User userResponse = new User();
    private User approverResponse = new User();
    private ResignationWithUser resignDetails = new ResignationWithUser();

    private async Task GoToNextPage()
    {
        if (!IsLastPage)
        {
            pagination.CurrentPage++;

            await LoadData();
        }
    }

    private async Task GoToPreviousPage()
    {
        if (!IsFirstPage)
        {
            pagination.CurrentPage--;
            await LoadData();
        }
    }
    private User SerializeResponse(object res)
    {
        string Response = JsonSerializer.Serialize(res);
        List<User> Details = JsonSerializer.Deserialize<List<User>>(Response)!;
        return Details[0];
    }
    public void ShowDetails(ResignationWithUser res)
    {
        resignDetails = res;
        if (res.approvedBy == null)
        {
            approverResponse.name = "N/A";
        }
        else
        {
            approverResponse = SerializeResponse(res.approverDetails);
        }
        userResponse = SerializeResponse(res.userDetails);
        jSRuntime.InvokeVoidAsync("ShowDetailsModal");
    }
}





